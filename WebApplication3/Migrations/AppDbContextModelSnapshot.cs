// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication3.Data;

#nullable disable

namespace WebApplication3.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication3.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseName = "Introduction to Programming"
                        },
                        new
                        {
                            Id = 2,
                            CourseName = "Database Systems"
                        },
                        new
                        {
                            Id = 3,
                            CourseName = "Data Structures"
                        },
                        new
                        {
                            Id = 4,
                            CourseName = "Operating Systems"
                        },
                        new
                        {
                            Id = 5,
                            CourseName = "Linear Algebra"
                        },
                        new
                        {
                            Id = 6,
                            CourseName = "Marketing Principles"
                        },
                        new
                        {
                            Id = 7,
                            CourseName = "Business Ethics"
                        },
                        new
                        {
                            Id = 8,
                            CourseName = "Quantum Physics"
                        },
                        new
                        {
                            Id = 9,
                            CourseName = "Organic Chemistry"
                        },
                        new
                        {
                            Id = 10,
                            CourseName = "World History"
                        });
                });

            modelBuilder.Entity("WebApplication3.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Computer Science"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Business"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Engineering"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Mathematics"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Physics"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Chemistry"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Biology"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Psychology"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Economics"
                        },
                        new
                        {
                            Id = 10,
                            Name = "History"
                        });
                });

            modelBuilder.Entity("WebApplication3.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 20,
                            DepartmentId = 1,
                            Email = "ahmed.ali@example.com",
                            FullName = "Ahmed Ali"
                        },
                        new
                        {
                            Id = 2,
                            Age = 22,
                            DepartmentId = 2,
                            Email = "sara.mohamed@example.com",
                            FullName = "Sara Mohamed"
                        },
                        new
                        {
                            Id = 3,
                            Age = 21,
                            DepartmentId = 1,
                            Email = "youssef.hany@example.com",
                            FullName = "Youssef Hany"
                        },
                        new
                        {
                            Id = 4,
                            Age = 23,
                            DepartmentId = 4,
                            Email = "laila.samir@example.com",
                            FullName = "Laila Samir"
                        },
                        new
                        {
                            Id = 5,
                            Age = 20,
                            DepartmentId = 5,
                            Email = "mona.adel@example.com",
                            FullName = "Mona Adel"
                        },
                        new
                        {
                            Id = 6,
                            Age = 24,
                            DepartmentId = 3,
                            Email = "karim.tarek@example.com",
                            FullName = "Karim Tarek"
                        },
                        new
                        {
                            Id = 7,
                            Age = 19,
                            DepartmentId = 7,
                            Email = "nour.hassan@example.com",
                            FullName = "Nour Hassan"
                        },
                        new
                        {
                            Id = 8,
                            Age = 22,
                            DepartmentId = 6,
                            Email = "omar.khaled@example.com",
                            FullName = "Omar Khaled"
                        },
                        new
                        {
                            Id = 9,
                            Age = 21,
                            DepartmentId = 8,
                            Email = "farah.nabil@example.com",
                            FullName = "Farah Nabil"
                        },
                        new
                        {
                            Id = 10,
                            Age = 20,
                            DepartmentId = 9,
                            Email = "tamer.yassin@example.com",
                            FullName = "Tamer Yassin"
                        });
                });

            modelBuilder.Entity("WebApplication3.Models.Student", b =>
                {
                    b.HasOne("WebApplication3.Models.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("WebApplication3.Models.Department", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
